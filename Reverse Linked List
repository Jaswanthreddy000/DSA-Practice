Given the head of a singly linked list, reverse the list, and return the reversed list.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null) return head;
        ListNode temp = head;
       ListNode prev = null;
       ListNode temp2 = head;
        while(temp!=null && temp.next != null)
        {
          temp2 = temp.next;
          temp.next = prev;
          prev = temp;
          temp = temp2 ;
        }
        temp.next = prev;
        return temp;
    }
}
