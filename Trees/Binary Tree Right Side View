/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> hm = new ArrayList<>();
        List<TreeNode> level = new ArrayList<>();
        if(root ==null) return hm;
        level.add(root);
        while(!level.isEmpty())
        {
            TreeNode n = level.remove(0);
            hm.add(n.val);
            int l = level.size();
            if(n.right!=null)
              level.add(n.right);
            if(n.left!=null)
              level.add(n.left);
            for(int i=0;i<l;i++)
            {
                TreeNode curr = level.remove(0);
                if(curr.right!=null)
                   level.add(curr.right);
                if(curr.left!=null)
                   level.add(curr.left);
            }
        }
        return hm;
    }
}
