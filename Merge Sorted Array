class Solution {
Solution 1  

public void merge(int[] nums1, int m, int[] nums2, int n) {
        int arr[] = new int[m];
        for(int i=0;i<m;i++)
        {
            arr[i] = nums1[i];
        }
        int i=0,j=0,k=0;
        while(i<m && j<n)
        {
            if(arr[i]<=nums2[j])
            {
                nums1[k] = arr[i];
                i++;
            }
            else if(arr[i]>nums2[j])
            {
                 nums1[k] = nums2[j];
                 j++;
            }
            k++;
        }
        while(i<m)
        {
            nums1[k] = arr[i];i++;k++;
        }
          while(j<n)
        {
            nums1[k] = nums2[j];j++;k++;
        }
    }
}

Solution 2
Take no extra array and also add elements in nums1 from end

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        // Start from the end of both arrays
        int i = m - 1; // Last index of nums1's initial elements
        int j = n - 1; // Last index of nums2
        int k = m + n - 1; // Last index of nums1 (total size)

        // Merge nums2 into nums1 starting from the end
        while (i >= 0 && j >= 0) {
            if (nums1[i] > nums2[j]) {
                nums1[k] = nums1[i];
                i--;
            } else {
                nums1[k] = nums2[j];
                j--;
            }
            k--;
        }

        // Copy remaining elements from nums2, if any
        while (j >= 0) {
            nums1[k] = nums2[j];
            j--;
            k--;
        }
    }
}
